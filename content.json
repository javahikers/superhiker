{"meta":{"title":"Javahiker's Homepage","subtitle":"每天积累一点点！","description":"java知识点整理","author":"liux","url":"http://javahikers.github.io","root":"/"},"pages":[{"title":"","date":"2019-06-16T05:34:07.844Z","updated":"2019-06-16T05:34:07.844Z","comments":true,"path":"googleb3dc2244e9db7414.html","permalink":"http://javahikers.github.io/googleb3dc2244e9db7414.html","excerpt":"","text":"google-site-verification: googleb3dc2244e9db7414.html"},{"title":"关于","date":"2019-05-04T13:50:03.000Z","updated":"2019-06-15T08:51:33.823Z","comments":true,"path":"about/index.html","permalink":"http://javahikers.github.io/about/index.html","excerpt":"","text":"关于我爱技术，爱生活 联系我 GitHub: @javahiker 博客社区: CSDN 微信/QQ: 675435543 个人邮箱: &#54;&#55;&#53;&#x34;&#51;&#x35;&#x35;&#52;&#x33;&#x40;&#113;&#x71;&#46;&#99;&#111;&#109; 关于本站本博客主要用于记录一个新手的成长之路。如果本站文章侵犯了其他笔者的原创作品，请联系删除。"},{"title":"Categories","date":"2019-06-15T08:51:33.824Z","updated":"2019-06-15T08:51:33.824Z","comments":false,"path":"categories/index.html","permalink":"http://javahikers.github.io/categories/index.html","excerpt":"","text":""},{"title":"Links","date":"2019-05-04T13:50:14.000Z","updated":"2019-06-15T08:51:33.826Z","comments":true,"path":"links/index.html","permalink":"http://javahikers.github.io/links/index.html","excerpt":"","text":""},{"title":"Tags","date":"2019-06-15T08:51:33.827Z","updated":"2019-06-15T08:51:33.827Z","comments":false,"path":"tags/index.html","permalink":"http://javahikers.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"hexo插入表格的多种方式","slug":"hexo插入表格的多种方式","date":"2019-06-15T12:05:29.000Z","updated":"2019-06-16T00:07:30.424Z","comments":true,"path":"2019/06/15/hexo插入表格的多种方式/","link":"","permalink":"http://javahikers.github.io/2019/06/15/hexo插入表格的多种方式/","excerpt":"","text":"Markdown插入表格默认表格表头内容默认居中对齐，单元格内容默认左对齐，Markdown 代码: | 标题1 | 标题2 | 标题3 | | ------ | ------ | ------ | | 文本好短 | 文本不短也不长 | 文本好长文本好长文本好长 | | 文本好长文本好长文本好长 | 文本好短 | 文本不短也不长 | 显示效果： 标题1 标题2 标题2 文本好短 文本不短也不长 文本好长文本好长文本好长 文本好长文本好长文本好长 文本好短 文本不短也不长 带有对齐格式的表格居左对齐，居中对齐，居右对齐，Markdown 代码: | 标题1 | 标题2 | 标题2 | | :------ | :------: | ------: | | 文本好短 | 文本不短也不长 | 文本好长文本好长文本好长 | | 文本好长文本好长文本好长 | 文本好短 | 文本不短也不长 | 显示效果： 标题1 标题2 标题2 文本好短 文本不短也不长 文本好长文本好长文本好长 文本好长文本好长文本好长 文本好短 文本不短也不长 Markdown关于表格的语法 默认标题居中对齐，内容居左对齐 :-内容和标题栏居左对齐，:-:内容和标题栏居中对齐，-:内容和标题栏居右对齐 | - :之间多余的空格会被忽略，-的数量至少一个 内容和|之间多余的空格会被忽略 通过html的table标签插入表格html写法&lt;table&gt; &lt;tr&gt; &lt;th&gt;标题1&lt;/th&gt; &lt;th&gt;标题2&lt;/th&gt; &lt;th&gt;标题3&lt;/th&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;文本好短&lt;/td&gt; &lt;td&gt;文本不短也不长&lt;/td&gt; &lt;td&gt;文本好长文本好长文本好长&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;文本好长文本好长文本好长&lt;/td&gt; &lt;td&gt;文本好短&lt;/td&gt; &lt;td&gt;文本不短也不长&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; 这种方式，表格上方会留出大量空白 解决表格上方留出空白的办法1.压缩表格 &lt;table&gt;&lt;tr&gt;&lt;th&gt;标题1&lt;/th&gt;&lt;th&gt;标题2&lt;/th&gt;&lt;th&gt;标题3&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;文本好短&lt;/td&gt;&lt;td&gt;文本不短也不长&lt;/td&gt;&lt;td&gt;文本好长文本好长文本好长&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;文本好长文本好长文本好长&lt;/td&gt;&lt;td&gt;文本好短&lt;/td&gt;&lt;td&gt;文本不短也不长&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt; 2.表格首部和尾部用如下字符串包裹 {% raw %} table {% endraw %} 两种方式对比 markdown的语法写起来比较直观，用 | 分割表格，当表格内容比较少时适合用这种方法 当从页面拷贝的table内容比较多时，更适合用后面这种方式，可以省去转换的步骤","categories":[{"name":"其他","slug":"其他","permalink":"http://javahikers.github.io/categories/其他/"}],"tags":[{"name":"使用教程","slug":"使用教程","permalink":"http://javahikers.github.io/tags/使用教程/"},{"name":"Hexo","slug":"Hexo","permalink":"http://javahikers.github.io/tags/Hexo/"}]},{"title":"hexo在文章插入aplayer音乐播放器","slug":"hexo在文章插入aplayer音乐播放器","date":"2019-06-15T09:41:14.000Z","updated":"2019-06-16T00:07:30.418Z","comments":true,"path":"2019/06/15/hexo在文章插入aplayer音乐播放器/","link":"","permalink":"http://javahikers.github.io/2019/06/15/hexo在文章插入aplayer音乐播放器/","excerpt":"","text":"喜欢下面的歌吗，可以点我哦，下面会教大家怎么使用 我的个人歌单，不定期更新 抖音排行榜，每周三更新 经典粤语合集 步骤安装hexo-tag-aplayer插件$ npm install hexo-tag-aplayer --save 在Hexo配置文件_config.yml中设置aplayer: meting: true 接着就可以在文章中使用MetingJS播放器了 在文章中引入模板1.歌曲模板 {% meting \"3986040\" \"netease\" \"song\" \"theme:#555\" \"mutex:true\" \"listmaxheight:340px\" \"preload:auto\" %} 2.歌单模板 {% meting \"627070825\" \"netease\" \"playlist\" \"theme:#555\" \"mutex:true\" \"listmaxheight:340px\" \"preload:auto\" %} 关于模板的选项列表MetingJS是基于Meting API的 APlayer 衍生播放器，引入3.0以上的MetingJS 后，播放器将支持对于QQ音乐、网易云音乐、虾米、酷狗、百度等平台的音乐播放模板的选项列表如下: 选项 默认值 描述 id 必须值 歌曲 id / 播放列表 id / 相册 id / 搜索关键字 server 必须值 音乐平台: netease, tencent, kugou, xiami, baidu type 必须值 song, playlist, album, search, artist fixed false 开启固定模式 mini false 开启迷你模式 loop all 列表循环模式：all, one,none order list 列表播放模式： list, random volume 0.7 播放器音量 lrctype 0 歌词格式类型 listfolded false 指定音乐播放列表是否折叠 storagename metingjs LocalStorage 中存储播放器设定的键名 autoplay true 自动播放，移动端浏览器暂时不支持此功能 mutex true 该选项开启时，如果同页面有其他 aplayer 播放，该播放器会暂停 listmaxheight 340px 播放列表的最大长度 preload auto 音乐文件预载入模式，可选项： none, metadata, auto theme #ad7a86 播放器风格色彩设置 关于歌曲id 播放列表id 如何获取登录网易云音乐，搜索《一生所爱》，点击生成外链播放器。这时候会提示：由于版权保护，无法生成外链。不要着急，通过如下方式找到id","categories":[{"name":"其他","slug":"其他","permalink":"http://javahikers.github.io/categories/其他/"}],"tags":[{"name":"安装部署","slug":"安装部署","permalink":"http://javahikers.github.io/tags/安装部署/"},{"name":"Hexo","slug":"Hexo","permalink":"http://javahikers.github.io/tags/Hexo/"}]},{"title":"Git配置多个SSH-Key","slug":"Git配置多个SSH-Key","date":"2019-06-14T22:42:09.000Z","updated":"2019-06-16T00:07:30.417Z","comments":true,"path":"2019/06/15/Git配置多个SSH-Key/","link":"","permalink":"http://javahikers.github.io/2019/06/15/Git配置多个SSH-Key/","excerpt":"","text":"背景当有多个git账号时，比如： 一个gitee，用于公司内部的工作开发； 两个github，用于自己进行一些开发活动； 步骤生成公钥和私钥对1.生成一个公司用的SSH-Key$ ssh-keygen -t rsa -C &#39;xxxxx@company.com&#39; -f ~/.ssh/gitee_id_rsa2.生成一个github用的SSH-Key$ ssh-keygen -t rsa -C &#39;xxxxxone@qq.com&#39; -f ~/.ssh/github_id_rsaone3.生成另外一个github用的SSH-Key$ ssh-keygen -t rsa -C &#39;xxxxxtwo@qq.com&#39; -f ~/.ssh/github_id_rsatwo命令运行完之后会在~/.ssh 目录下生成3对公钥和私钥。公钥末尾的值自动跟上面输入的邮箱对应。 gitee_id_rsa gitee_id_rsa.pub github_id_rsaone github_id_rsaone.pub github_id_rsatwo github_id_rsatwo.pub 配置config文件在 ~/.ssh 目录下新建一个config文件，~对应windows下的用户目录，添加以下内容。其中HostName为git服务器的域名，Host为下载代码时需要替换的域名。IdentityFile指定私钥的路径，私钥名称跟上面保持一致。 # gitee Host gitee.com HostName gitee.com PreferredAuthentications publickey IdentityFile ~/.ssh/gitee_id_rsa # github Host github.com.one HostName github.com PreferredAuthentications publickey IdentityFile ~/.ssh/github_id_rsaone # github Host github.com.two HostName github.com PreferredAuthentications publickey IdentityFile ~/.ssh/github_id_rsatwo 配置公钥到git,分别对应3个不同的账户登录github，配置公钥 用ssh命令分别测试$ ssh -T git@gitee.com $ ssh -T git@github.com.one $ ssh -T git@github.com.two 这里以github为例，成功的话会返回下面内容 Hi javahikers! You&apos;ve successfully authenticated, but GitHub does not provide shell access. 下载代码注意事项1.路径以http://开头，可以下载。提交代码时,会提示没有权限。代码地址 git clone https://github.com/javahikers/algorithms-studying.git 2.路径以git@ 开头，下载代码时会进行权限校验。只有登录github之后才能切换成git开头的路径。如果自己开发，推荐使用这种方式。将github.com替换成config文件中配置的Host。代码地址 git clone git@github.com.two:javahikers/algorithms-studying.git 3.不变更路径会提示没有权限下载 $ git clone git@github.com:javahikers/algorithms-studying.git Cloning into &apos;algorithms-studying&apos;... git@github.com: Permission denied (publickey). fatal: Could not read from remote repository. Please make sure you have the correct access rights and the repository exists.","categories":[{"name":"其他","slug":"其他","permalink":"http://javahikers.github.io/categories/其他/"}],"tags":[{"name":"git","slug":"git","permalink":"http://javahikers.github.io/tags/git/"},{"name":"安装部署","slug":"安装部署","permalink":"http://javahikers.github.io/tags/安装部署/"}]},{"title":"IDEA搭建maven多模块module项目","slug":"IDEA搭建maven多模块module项目","date":"2019-06-13T22:20:23.000Z","updated":"2019-06-15T08:51:33.791Z","comments":true,"path":"2019/06/14/IDEA搭建maven多模块module项目/","link":"","permalink":"http://javahikers.github.io/2019/06/14/IDEA搭建maven多模块module项目/","excerpt":"","text":"通过IDEA创建多模块项目，有时候需要树形结构，有的需要平行结构，下面将手把手教你如何创建多模块项目。 新建项目打开IDEA新建项目 用maven创建项目，点击next 进入下一步 建立groupId,artifactId,version信息 建项目名与项目位置 建好的项目目录如下，红框内的文件可以删除或是保留 删除多余的文件 创建子模块，父子模块之间是树形结构新建模块 选择Maven,点Next 选择父模块 ArtifactId对应模块名称 填写子模块名称 生成树形结构的父子模块 创建子模块，父子模块之间是平行结构重复之前创建子模块的步骤，直到填写子模块名称 这一步，让子模块跟跟父模块处于平行的目录 生成平行结构的父子模块 IDEA删除模块，然后再创建时出现异常删除模块，然后再创建相同名称的模块时，往往会提示： Maven:Failed to create a Maven project ‘…pom.xml’ already exists in VFS 模块都已经删除了，怎么还提示我有相同的工程呢？ 原因，原先的那个Project其实还是在我们的电脑上，即VFS虚拟档案系统。 解决办法","categories":[{"name":"其他","slug":"其他","permalink":"http://javahikers.github.io/categories/其他/"}],"tags":[{"name":"IntelliJ-IDEA","slug":"IntelliJ-IDEA","permalink":"http://javahikers.github.io/tags/IntelliJ-IDEA/"},{"name":"Maven","slug":"Maven","permalink":"http://javahikers.github.io/tags/Maven/"},{"name":"使用教程","slug":"使用教程","permalink":"http://javahikers.github.io/tags/使用教程/"}]},{"title":"hexo博客引入图片","slug":"hexo博客引入图片","date":"2019-06-12T13:01:23.000Z","updated":"2019-06-15T08:51:33.816Z","comments":true,"path":"2019/06/12/hexo博客引入图片/","link":"","permalink":"http://javahikers.github.io/2019/06/12/hexo博客引入图片/","excerpt":"","text":"前言很多时候图片比文字更有说服力，但是如何引入呢？图片放什么地方呢？其实不用借助七牛。 步骤 将_config.yml里的post_asset_folder设置为truepost_asset_folder: true 在hexo目录下执行:npm install hexo-asset-image --save 在hexo目录下执行:hexo n &quot;博客名&quot;_post目录下会生成一个名称为”博客名.md”的博客，同时也会生成一个与博客同名的文件夹”博客名” 将要上传的图片放到博客对应的文件夹下，然后在博客中使用markdown的格式引入图片![提示信息](博客名/图片名.jpg)提醒：这种方法只是单纯把图片显示出来，如果图片很大的话就会铺满屏幕或者超高，排版上不好看 通过img标签控制宽高&lt;img src=&quot;hexo博客引入图片/Daniel.jpg&quot; width=&quot;460px&quot; height=&quot;690px&quot; /&gt; 通过 div 标签和 align 属性控制对齐方式&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;hexo博客引入图片/Daniel.jpg&quot; width=&quot;460px&quot; height=&quot;690px&quot; /&gt;&lt;/div&gt; hexo g部署之后，进入public\\2019\\06\\12\\博客名\\index.html文件中查看html标签内的语句是&lt;img src=&quot;2019/06/12/博客名/图片名.jpg&quot;&gt;而不是&lt;img src=&quot;博客名/图片名.jpg&gt; 这里碰到一个问题，无论本地还是线上，生成的index.html生成的img标签是&lt;img src=&quot;/.io//图片名.jpg&quot;&gt;，怀疑是hexo-asset-image版本的问题。查看我的hexo-asset-image版本是1.0.0，选择降低版本后问题解决npm install hexo-asset-image@0.0.3 --save 来张Daniel的帅照~~~","categories":[{"name":"其他","slug":"其他","permalink":"http://javahikers.github.io/categories/其他/"}],"tags":[{"name":"安装部署","slug":"安装部署","permalink":"http://javahikers.github.io/tags/安装部署/"},{"name":"Hexo","slug":"Hexo","permalink":"http://javahikers.github.io/tags/Hexo/"}]},{"title":"如何解决IDEA启动过慢的问题","slug":"如何解决IDEA启动过慢的问题","date":"2019-05-05T12:33:15.000Z","updated":"2019-06-15T08:51:33.821Z","comments":true,"path":"2019/05/05/如何解决IDEA启动过慢的问题/","link":"","permalink":"http://javahikers.github.io/2019/05/05/如何解决IDEA启动过慢的问题/","excerpt":"","text":"找到配置文件idea的bin目录下有个.vmoptions后缀结尾的文件，请打开。32位的对应idea.exe.vmoptions，64位的对应idea64.exe.vmoptions 我的配置-server-Xms2g-Xmx2g-XX:ReservedCodeCacheSize=240m-XX:+UseConcMarkSweepGC-XX:SoftRefLRUPolicyMSPerMB=50-ea-Dsun.io.useCanonCaches=false-Djava.net.preferIPv4Stack=true-Djdk.http.auth.tunneling.disabledSchemes=””-XX:+HeapDumpOnOutOfMemoryError-XX:-OmitStackTraceInFastThrow-javaagent:D:\\idea2018\\ideaIU-2018.3.win\\bin\\JetbrainsIdesCrack-3.4-release-enc.jar 程序使用内存设置-Xms用来设置程序初始化时内存栈的大小，增加这个值会使程序的启动性能会得到提高-Xmx用来设置程序能够使用的最大内存，这个值不要设置超过机器的内存，笔者认为，在大多数情况下,把Xmx值设置在2g和3g之间是最佳的。这里统一设置成2g","categories":[{"name":"软件相关","slug":"软件相关","permalink":"http://javahikers.github.io/categories/软件相关/"}],"tags":[{"name":"安装部署","slug":"安装部署","permalink":"http://javahikers.github.io/tags/安装部署/"},{"name":"IntelliJ-IDEA","slug":"IntelliJ-IDEA","permalink":"http://javahikers.github.io/tags/IntelliJ-IDEA/"}]},{"title":"markdown简明使用方法","slug":"markdown简明使用方法","date":"2019-05-04T13:34:16.000Z","updated":"2019-06-15T08:51:33.819Z","comments":true,"path":"2019/05/04/markdown简明使用方法/","link":"","permalink":"http://javahikers.github.io/2019/05/04/markdown简明使用方法/","excerpt":"","text":"一行语法对应一行示例,学会之后即可轻松写出高大上的文档。本人使用sublime编写，只为简洁。 强调斜体，单星号或单下划线，可跨行*作者最新文章*作者最新文章_机器监测员工绩效、发出解雇指令_机器监测员工绩效、发出解雇指令_机器监测员工绩效、发出解雇指令_机器监测员工绩效、发出解雇指令 粗体，双星号或双下划线，可跨行**北京延庆街头世园会气氛渐浓**北京延庆街头世园会气氛渐浓__亚马逊会员为什么会如此成功？__亚马逊会员为什么会如此成功？__亚马逊会员为什么会如此成功？__亚马逊会员为什么会如此成功？ 分割线三个或更多*_-，必须单独一行*** 3个*___ 3个_--- 3个- 引用引用翻译成html就是&lt;blockquote>&lt;/blockquote>>我是引用 我是引用 >我是引用 >>我是引用中的引用 我是引用 我是引用中的引用 标题：Setext方式大标题=== 大标题小标题--- 小标题 标题：Atx方式# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题 一级标题二级标题三级标题四级标题五级标题六级标题 无序列表-+*，后面有空格- 无序列表- 无序列表- 无序列表 无序列表 无序列表 无序列表 + 无序列表+ 无序列表+ 无序列表 无序列表 无序列表 无序列表 * 无序列表* 无序列表* 无序列表 无序列表 无序列表 无序列表 有序列表数字（可无序），点， 空格1. 有序列表2. 有序列表3. 有序列表8. 有序列表 有序列表 有序列表 有序列表 有序列表 嵌套列表-+*可交叉使用，符号前后带空格-&nbsp;嵌套列表&nbsp;+&nbsp;嵌套列表&nbsp;+&nbsp;嵌套列表&nbsp;&nbsp;-&nbsp;嵌套列表&nbsp;&nbsp;&nbsp;*&nbsp;嵌套列表-&nbsp;嵌套列表 嵌套列表 嵌套列表 嵌套列表 嵌套列表 嵌套列表 嵌套列表 文字超链：Inline方式[javahiker](https://javahikers.github.io &quot;javahiker的博客&quot;)javahiker 图片超链![Github Javahiker](http://javahikers.github.io/2019/05/04/markdown简明使用方法/javahiker.jpg &quot;Javahiker&quot;) Javahiker 在hexo中引入图片的其他方法，请进入我的博文=&gt; hexo博客引入图片 索引超链接 Reference方式1，2可以是任意字符[javahiker][1]![Github Javahiker][2] [1]:http://javahikers.github.io[2]:http://javahikers.github.io/2019/05/04/markdown简明使用方法/javahiker.jpg javahiker 自动链接尖括号&lt;https://javahikers.github.io&gt;&lt;675435543@qq.com&gt; https://javahikers.github.io&#54;&#55;&#x35;&#x34;&#x33;&#53;&#x35;&#52;&#51;&#x40;&#x71;&#113;&#46;&#x63;&#x6f;&#109; 代码：行内代码使用左上角数字1左边的键盘`val s = “hello Markdown”``println( s )`val s = &quot;hello Markdown&quot;println( s ) 代码：段落代码每行文字前加4个空格或者1个Tab&nbsp;&nbsp;&nbsp;&nbsp;val s = “hello Markdown”&nbsp;&nbsp;&nbsp;&nbsp;println( s ) val s = &quot;hello Markdown&quot; println( s ) 注释&lt;!– 注释 –&gt; 转义字符Markdown中的转义字符为\\，转义的有：\\\\ 反斜杠\\` 反引号\\* 星号\\_ 下划线\\{\\} 大括号\\[\\] 中括号\\(\\) 小括号\\# 井号\\+ 加号\\- 减号\\. 英文句号\\! 感叹号 其它文本中可直接用html标签","categories":[{"name":"其他","slug":"其他","permalink":"http://javahikers.github.io/categories/其他/"}],"tags":[{"name":"使用教程","slug":"使用教程","permalink":"http://javahikers.github.io/tags/使用教程/"},{"name":"总结","slug":"总结","permalink":"http://javahikers.github.io/tags/总结/"}]}]}